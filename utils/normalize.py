import re
import sys
import unicodedata
import string
from pyvi import ViTokenizer

# H√†m chu·∫©n ho√° c√°c t·ª´ ti·∫øng vi·ªát c√≥ d·∫•u
def nomarlize_text(string):
    for k, v in replace_list1.items():
        string = string.replace(k, v)
    return string
replace_list1 = {
    # tr∆∞·ªùng h·ª£p ƒë·∫∑t sai d·∫•u
    '√≤a': 'o√†', '√≥a': 'o√°', '·ªèa': 'o·∫£', '√µa': 'o√£', '·ªça': 'o·∫°',
    '√≤e': 'o√®', '√≥e': 'o√©','·ªèe': 'o·∫ª', '√µe': 'o·∫Ω', '·ªçe': 'o·∫π',
    '√πy': 'u·ª≥', '√∫y': 'u√Ω', '·ªßy': 'u·ª∑', '≈©y': 'u·ªπ','·ª•y': 'u·ªµ',
    '·ªßa':'u·∫£','√∫a':'u√°', '√πa':'u√†','≈©an':'u√£n','·ª•a':'u·∫°'}
    

# h√†m xo√° d·∫•u ti·∫øng vi·ªát b·∫±ng unicodedata
python_version = sys.version_info[0]
def no_marks(s):
    if python_version < 3:
        s = s.decode('utf-8')
        s = re.sub(unichr(272), 'D', s)
        s = re.sub(unichr(273), 'd', s)
    else:
        s = re.sub('\u0110', 'D', s)
        s = re.sub('\u0111', 'd', s)
    if python_version < 3:
        return unicodedata.normalize('NFKD', unicode(s)).encode('ASCII', 'ignore').decode("utf-8") 
    else:
        return unicodedata.normalize('NFKD', s).encode('ASCII', 'ignore').decode("utf-8") 

# H√†m chu·∫©n ho√° c√°c c√°ch vi·∫øt teencode ·ªü tr√™n m·∫°ng x√£ h·ªôi
# Chu·∫©n ho√° c√°c emoj c·∫£m x√∫c th√†nh positive v√† negative
def nomarlize_teen_code(text):
    text = text.lower()

    # chuy·ªÉn c√°c d·∫•u ch·∫•m th√†nh d·∫•u c√°ch  , h√†m maketrans() ƒë·ªÉ chuy·ªÉn d·∫•u ch·∫•m v·ªÅ d·∫•u c√°ch
    # chuyen punctuation th√†nh space 
    # m·ª•c ƒë√≠ch c·ªßa d√≤ng n√†y ƒë·ªÉ x√≥a c√°c d·∫•u '.' , ',' , '????' , '!!!'
    translator = str.maketrans(string.punctuation, ' ' * len(string.punctuation))
    text = text.translate(translator)

    #Remove c√°c k√Ω t·ª± k√©o d√†i: vd: ƒë·∫πppppppp th√†nh ƒë·∫πP ( n√≥ b·ªã l·ªói chuy·ªÉn th√†nh ch·ªØ hoa , do ƒë√≥ c·∫ßn chuy·ªÉn l·∫°i v·ªÅ ch·ªØ th∆∞·ªùng)
    text = re.sub(r'(a-z])\1+', lambda m: m.group(1), text, flags=re.IGNORECASE)
    
    for k, v in replace_list2.items():
        text = text.replace(k, v)
    
    text = ViTokenizer.tokenize(text)
    text = re.sub(r'( )\1+', lambda m: m.group(1), text, flags=re.IGNORECASE)
    return text
# t·ª´ ƒëi·ªÉn chu·∫©n ho√°
replace_list2 = {
    # tr∆∞·ªùng h·ª£p ƒë·∫∑t sai d·∫•u
    '√≤a': 'o√†', '√≥a': 'o√°', '·ªèa': 'o·∫£', '√µa': 'o√£', '·ªça': 'o·∫°',
    '√≤e': 'o√®', '√≥e': 'o√©','·ªèe': 'o·∫ª', '√µe': 'o·∫Ω', '·ªçe': 'o·∫π',
    '√πy': 'u·ª≥', '√∫y': 'u√Ω', '·ªßy': 'u·ª∑', '≈©y': 'u·ªπ','·ª•y': 'u·ªµ',
    '·ªßa':'u·∫£','√∫a':'u√°', '√πa':'u√†','≈©an':'u√£n','·ª•a':'u·∫°',
    # tr∆∞·ªùng h·ª£p c√≥ d·∫•u kh√°c encode
    '√†k': '√†', 'aÀã': '√†', 'a¬¥': '√°','aÃâ': '·∫£','aÀú':'√£',
    'ƒÉÀã':'·∫±', 'ƒÉ¬¥': '·∫Ø','ƒÉÃÅ': '·∫Ø',
    '√¢ÃÄ': '·∫ß','√¢Àã':'·∫ß', '√¢¬¥': '·∫•','√¢ÃÅ': '·∫•', '√¢Ãâ': '·∫©', '√¢ÃÉ': '·∫´',
    'oÀã':'√≤', 'o¬¥': '√≥', 'oÃâ': '·ªè','oÀú':'√µ',
    '√¥ÃÄ': '·ªì','√¥Àã':'·ªì','√¥ÃÅ': '·ªë', '√¥¬¥': '·ªë', '√¥Ãâ': '·ªï','√¥ÃÉ': '·ªó','√¥Àú':'·ªó',
    '∆°Àã':'·ªù', '∆°¬¥': '·ªõ', '∆°Ãâ': '·ªü',
    'eÀã':'√®', 'e¬¥': '√©', 'eÃâ': '·∫ª','eÀú': '·∫Ω',
    '√™Àã':'·ªÅ', '√™¬¥':'·∫ø','√™ÃÄ': '·ªÅ', '√™ÃÅ': '·∫ø','√™ÃÉ': '·ªÖ','√™Àú':'·ªÖ',
    'uÀã':'√π', 'u¬¥':'√∫','uÃâ':'·ªß','uÀú':'≈©',
    '∆∞Àã':'·ª´', '∆∞¬¥':'·ª©','∆∞Ãâ':'·ª≠', '∆∞Àú':'·ªØ',
    'iÀã':'√¨','i¬¥':'√≠', 'iÃâ':'·ªâ',
    'yÀã':'·ª≥', 'y¬¥':'√Ω', 'yÀú':'·ªπ',
    # tr∆∞·ªùng h·ª£p ƒë·∫πp t·ª´ ƒë·∫πp qu√°aa kh√¥ng xo√° ƒë∆∞·ª£c √°a
    '√°a':'√°',
    #Quy c√°c icon v·ªÅ 2 lo·∫°i emoj: T√≠ch c·ª±c ho·∫∑c ti√™u c·ª±c
    "üëπ": "nagative", "üëª": "positive", "üíÉ": "positive",'ü§ô': ' positive ', 'üëç': ' positive ',
    "üíÑ": "positive", "üíé": "positive", "üí©": "positive","üòï": "nagative", "üò±": "nagative", "üò∏": "positive",
    "üòæ": "nagative", "üö´": "nagative",  "ü§¨": "nagative","üßö": "positive", "üß°": "positive",'üê∂':' positive ',
    'üëé': ' nagative ', 'üò£': ' nagative ','‚ú®': ' positive ', '‚ù£': ' positive ','‚òÄ': ' positive ',
    '‚ô•': ' positive ', 'ü§©': ' positive ', 'like': ' positive ', 'üíå': ' positive ',
    'ü§£': ' positive ', 'üñ§': ' positive ', 'ü§§': ' positive ', ':(': ' nagative ', 'üò¢': ' nagative ',
    '‚ù§': ' positive ', 'üòç': ' positive ', 'üòò': ' positive ', 'üò™': ' nagative ', 'üòä': ' positive ',
    '?': ' ? ', 'üòÅ': ' positive ', 'üíñ': ' positive ', 'üòü': ' nagative ', 'üò≠': ' nagative ',
    'üíØ': ' positive ', 'üíó': ' positive ', '‚ô°': ' positive ', 'üíú': ' positive ', 'ü§ó': ' positive ',
    '^^': ' positive ', 'üò®': ' nagative ', '‚ò∫': ' positive ', 'üíã': ' positive ', 'üëå': ' positive ',
    'üòñ': ' nagative ', 'üòÄ': ' positive ', ':((': ' nagative ', 'üò°': ' nagative ', 'üò†': ' nagative ',
    'üòí': ' nagative ', 'üôÇ': ' positive ', 'üòè': ' nagative ', 'üòù': ' positive ', 'üòÑ': ' positive ',
    'üòô': ' positive ', 'üò§': ' nagative ', 'üòé': ' positive ', 'üòÜ': ' positive ', 'üíö': ' positive ',
    '‚úå': ' positive ', 'üíï': ' positive ', 'üòû': ' nagative ', 'üòì': ' nagative ', 'Ô∏èüÜóÔ∏è': ' positive ',
    'üòâ': ' positive ', 'üòÇ': ' positive ', ':v': '  positive ', '=))': '  positive ', 'üòã': ' positive ',
    'üíì': ' positive ', 'üòê': ' nagative ', ':3': ' positive ', 'üò´': ' nagative ', 'üò•': ' nagative ',
    'üòÉ': ' positive ', 'üò¨': ' üò¨ ', 'üòå': ' üòå ', 'üíõ': ' positive ', 'ü§ù': ' positive ', 'üéà': ' positive ',
    'üòó': ' positive ', 'ü§î': ' nagative ', 'üòë': ' nagative ', 'üî•': ' nagative ', 'üôè': ' nagative ',
    'üÜó': ' positive ', 'üòª': ' positive ', 'üíô': ' positive ', 'üíü': ' positive ',
    'üòö': ' positive ', '‚ùå': ' nagative ', 'üëè': ' positive ', ';)': ' positive ', '<3': ' positive ',
    'üåù': ' positive ',  'üå∑': ' positive ', 'üå∏': ' positive ', 'üå∫': ' positive ',
    'üåº': ' positive ', 'üçì': ' positive ', 'üêÖ': ' positive ', 'üêæ': ' positive ', 'üëâ': ' positive ',
    'üíê': ' positive ', 'üíû': ' positive ', 'üí•': ' positive ', 'üí™': ' positive ',
    'üí∞': ' positive ',  'üòá': ' positive ', 'üòõ': ' positive ', 'üòú': ' positive ',
    'üôÉ': ' positive ', 'ü§ë': ' positive ', 'ü§™': ' positive ','‚òπ': ' nagative ',  'üíÄ': ' nagative ',
    'üòî': ' nagative ', 'üòß': ' nagative ', 'üò©': ' nagative ', 'üò∞': ' nagative ', 'üò≥': ' nagative ',
    'üòµ': ' nagative ', 'üò∂': ' nagative ', 'üôÅ': ' nagative ',
    '‚≠ê': 'star ', '*': 'star ', 'üåü': 'star ', 'üéâ': u' positive ',
    ':))': '  positive ', ':)': ' positive ',
    #d∆∞·ªõi 3* quy v·ªÅ 1*, tr√™n 3* quy v·ªÅ 5*
    '6 sao': ' 5star ','6 star': ' 5star ', '5star': ' 5star ','5 sao': ' 5star ','5sao': ' 5star ',
    'starstarstarstarstar': ' 5star ', '1 sao': ' 1star ', '1sao': ' 1star ','2 sao':' 1star ','2sao':' 1star ',
    '2 starstar':' 1star ','1star': ' 1star ', '0 sao': ' 1star ', '0star': ' 1star ',
    #Chu·∫©n h√≥a 1 s·ªë sentiment words/English words
    '√¥ k√™i': ' ok ', 'okie': ' ok ', ' o k√™ ': ' ok ',
    'okey': ' ok ', '√¥k√™': ' ok ', 'oki': ' ok ', ' oke ':  ' ok ',' okay':' ok ','ok√™':' ok ',
    ' tks ': u' c√°m ∆°n ', 'thks': u' c√°m ∆°n ', 'thanks': u' c√°m ∆°n ', 'ths': u' c√°m ∆°n ', 'thank': u' c√°m ∆°n ', 'hong':'kh√¥ng',
    'kg ': u' kh√¥ng ','not': u' kh√¥ng ', u' kg ': u' kh√¥ng ', '"k ': u' kh√¥ng ',' kh ':u' kh√¥ng ','k√¥':u' kh√¥ng ','hok':u' kh√¥ng ',
    ' kp ': u' kh√¥ng ph·∫£i ',u' k√¥ ': u' kh√¥ng ', '"ko ': u' kh√¥ng ', u' ko ': u' kh√¥ng ', u' k ': u' kh√¥ng ', 'khong': u' kh√¥ng ', u' hok ': u' kh√¥ng ',
    'he he': ' positive ','hehe': ' positive ','hihi': ' positive ', 'haha': ' positive ', 'hjhj': ' positive ',
    ' lol ': ' nagative ',' cc ': ' nagative ','cute': u' d·ªÖ th∆∞∆°ng ','huhu': ' nagative ', ' vs ': u' v·ªõi ', 'wa': ' qu√° ', 'w√°': u' qu√°', 'j': u' g√¨ ', '‚Äú': ' ',
    ' sz ': u' c·ª° ', 'size': u' c·ª° ', u' ƒëx ': u' ƒë∆∞·ª£c ', 'dk': u' ƒë∆∞·ª£c ', 'dc': u' ƒë∆∞·ª£c ', 'ƒëk': u' ƒë∆∞·ª£c ',
    'ƒëc': u' ƒë∆∞·ª£c ','authentic': u' chu·∫©n ch√≠nh h√£ng ',u' aut ': u' chu·∫©n ch√≠nh h√£ng ', u' auth ': u' chu·∫©n ch√≠nh h√£ng ', 'thick': u' positive ', 'store': u' c·ª≠a h√†ng ',
    'shop': u' c·ª≠a h√†ng ', 'sp': u' s·∫£n ph·∫©m ', 'gud': u' t·ªët ','god': u' t·ªët ','wel done':' t·ªët ', 'good': u' t·ªët ', 'g√∫t': u' t·ªët ',
    's·∫•u': u' x·∫•u ','gut': u' t·ªët ', u' tot ': u' t·ªët ', u' nice ': u' t·ªët ', 'perfect': 'r·∫•t t·ªët', 'bt': u' b√¨nh th∆∞·ªùng ',
    'time': u' th·ªùi gian ', 'q√°': u' qu√° ', u' ship ': u' giao h√†ng ', u' m ': u' m√¨nh ', u' mik ': u' m√¨nh ',
    '√™Ãâ': '·ªÉ', 'product': 's·∫£n ph·∫©m', 'quality': 'ch·∫•t l∆∞·ª£ng','chat':' ch·∫•t ', 'excelent': 'ho√†n h·∫£o', 'bad': 't·ªá','fresh': ' t∆∞∆°i ','sad': ' t·ªá ',
    'date': u' h·∫°n s·ª≠ d·ª•ng ', 'hsd': u' h·∫°n s·ª≠ d·ª•ng ','quickly': u' nhanh ', 'quick': u' nhanh ','fast': u' nhanh ','delivery': u' giao h√†ng ',u' s√≠p ': u' giao h√†ng ',
    'beautiful': u' ƒë·∫πp tuy·ªát v·ªùi ', u' tl ': u' tr·∫£ l·ªùi ', u' r ': u' r·ªìi ', u' shopE ': u' c·ª≠a h√†ng ',u' order ': u' ƒë·∫∑t h√†ng ',
    'ch·∫•t lg': u' ch·∫•t l∆∞·ª£ng ',u' sd ': u' s·ª≠ d·ª•ng ',u' dt ': u' ƒëi·ªán tho·∫°i ',u' nt ': u' nh·∫Øn tin ',u' tl ': u' tr·∫£ l·ªùi ',u' s√†i ': u' x√†i ',u'bjo':u' bao gi·ªù ',
    'thik': u' th√≠ch ',u' sop ': u' c·ª≠a h√†ng ', ' fb ': ' facebook ', ' face ': ' facebook ', ' very ': u' r·∫•t ',u'qu·∫£ ng ':u' qu·∫£ng  ',
    'dep': u' ƒë·∫πp ',u' xau ': u' x·∫•u ','delicious': u' ngon ', u'h√†g': u' h√†ng ', u'q·ªßa': u' qu·∫£ ',
    'iu': u' y√™u ','fake': u' gi·∫£ m·∫°o ', 'trl': 'tr·∫£ l·ªùi', '><': u' positive ',
    ' por ': u' t·ªá ',' poor ': u' t·ªá ', 'ib':u' nh·∫Øn tin ', 'rep':u' tr·∫£ l·ªùi ',u'fback':' feedback ','fedback':' feedback ',
    #d∆∞·ªõi 3* quy v·ªÅ 1*, tr√™n 3* quy v·ªÅ 5*
    '6 sao': ' 5star ','6 star': ' 5star ', '5star': ' 5star ','5 sao': ' 5star ','5sao': ' 5star ',
    'starstarstarstarstar': ' 5star ', '1 sao': ' 1star ', '1sao': ' 1star ','2 sao':' 1star ','2sao':' 1star ',
    '2 starstar':' 1star ','1star': ' 1star ', '0 sao': ' 1star ', '0star': ' 1star ',
    u'"':u' ', u'Ô∏è':u'', 'üèª':'', "'":"",
    }
#########################################################################################################